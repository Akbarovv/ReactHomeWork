{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h5/pages/Eror.module.css","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","HW1","className","s","body","Affair","props","affair","name","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","someClass","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","alert","HW3","v1","setUsers","newUser","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","console","log","checked","HW4","text","setText","showAlert","setChecked","column","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","count","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","hit_the_floor","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","Header","navbar","activeClassName","light","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5e650cbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Header_navbar__29drr\",\"light\":\"Header_light__1s7cR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__9kDe7\",\"error\":\"Greeting_error__yVcLE\",\"body\":\"Greeting_body__V9T7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1KuCf\",\"spanClassName\":\"SuperCheckbox_spanClassName__2bN8I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Affairs_body__2rW09\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2h5et\",\"errorInput\":\"SuperInputText_errorInput__1735g\",\"error\":\"SuperInputText_error__3ilX6\",\"finalInputClassName\":\"SuperInputText_finalInputClassName__1spiQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2ci7X\",\"column\":\"HW4_column__1ttf_\",\"body\":\"HW4_body__1_tsB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3MfQa\",\"red\":\"SuperButton_red__3gE20\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__A2MpI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1LhL8\",\"body\":\"Message_body__33POB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"SuperEditableSpan_count__3ryLr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hit_the_floor\":\"Eror_hit_the_floor__2F3Rk\"};","import React from \"react\";\r\nimport Message from \"./Message\";\r\nimport s from \"./Message.module.css\"\r\nconst messageData = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Some Name\",\r\n    message: \"some text\",\r\n    time: \"22:00\",\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div className={s.body}>\r\n          <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n          {/*  <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />*/}\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback:  (f: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\nprops.deleteAffairCallback(props.affair._id)\r\n    };// need to fix\r\n\r\n    return (\r\n        <div>\r\n            {props.affair.name} {props.affair.priority}\r\n\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\n\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (f: FilterType) => void\r\n    deleteAffairCallback: (f: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\nprops.setFilter(\"all\")\r\n    }; // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter(\"high\")\r\n    };\r\n    const setMiddle = () => {props.setFilter(\"middle\")};\r\n    const setLow = () => {\r\n        props.setFilter(\"low\")\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {mappedAffairs}\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\nimport s from \"./Affairs.module.css\"\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\"// need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === \"all\") return affairs;\r\n    else return affairs.filter(f => f.priority === filter)\r\n\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(f => f._id !== _id); // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\r\n\r\n    return (\r\n        <div className={s.body}>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>)=>void // need to fix any\r\n    addUser: ()=> void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass =  name === \"\" ?  s.error: s.someClass; // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\r\n            <span>{error}</span>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(\"\"); // need to fix any\r\n    const [error, setError] = useState<string>(\"\"); // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        let value = e.currentTarget.value\r\n        setName(value); // need to fix\r\n    };\r\n    const addUser = () => {\r\n        if (name === \"\") {\r\n            alert('Error: name must be entered')\r\n            setError(\"\")\r\n        } else {\r\n            alert(`Hello ${name}`)\r\n            addUserCallback(name)\r\n            setName(\"\")\r\n        }\r\n\r\n    };\r\n\r\n    const totalUsers = users.length; // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport {v1} from \"uuid\";\r\nimport s from \"./Greeting.module.css\"\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    let [users, setUsers] = useState<Array<UserType>>([\r\n        {_id: v1(), name: \"asa\"}\r\n    ]); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        let newUser: UserType = {_id: v1(), name: \"Must have\"}\r\n        setUsers([newUser, ...users]); // need to fix\r\n    }\r\n\r\n    return (\r\n        <div className={s.body}>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = error ? `${s.errorInput}` : `${s.finalInputClassName}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={`${finalInputClassName} `}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        console.log(e.currentTarget.checked)\r\n        if (onChange) {\r\n            onChange(e)\r\n        }\r\n        if (onChangeChecked) {\r\n            onChangeChecked(e.currentTarget.checked)\r\n        }\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${s.children ? s.spanClassName : \"\"}`;\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        return setChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    return (\r\n        <div className={s.body}>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./SuperEditableSpan.module.css\"\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode(); // выключить editMode при нажатии Enter\r\n        setEditMode(false)\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode(); // выключить editMode при нажатии за пределами инпута\r\n        setEditMode(false)\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode(); // включить editMode при двойном клике\r\n        setEditMode(true)\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${s.count} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// использование:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке \"test\"\r\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\r\n\r\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\r\n","import React, {useState} from \"react\";\r\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\r\nimport s from \"../h2/Affairs.module.css\"\r\n\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const save = () => {\r\n        saveState<string>(\"editable-span-value\", value);\r\n\r\n    };\r\n    const restore = () => {\r\n        // setValue();\r\n        let a = restoreState(\"editable-span-value\", value)\r\n        setValue(a)\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={s.body}>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW6;\r\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from \"react\";\r\nimport e from \"./Eror.module.css\"\r\nfunction Error404() {\r\n    return (\r\n        <div className={e.hit_the_floor}>\r\n           404\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from \"react\";\r\n\r\nconst Junior = () => {\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\nexport default Junior;","import React from \"react\";\r\n\r\nconst JuniorPlus = () => {\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus;","import React from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    Junior: \"/junior\",\r\n    JuniorPlus: \"/juniorPlus\"\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n                <Route path={\"/\"} exact render={() => <Redirect to={\"PRE_JUNIOR\"}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                // add routes\r\n                <Route path={PATH.Junior} render={() => <Junior/>}/>\r\n                <Route path={PATH.JuniorPlus} render={() => <JuniorPlus/>}/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport s from \"./Header.module.css\"\r\nimport {PATH} from \"./Routes\";\r\n\r\nfunction Header() {\r\n\r\n    return (\r\n        <div className={s.navbar}>\r\n            <NavLink to={PATH.PRE_JUNIOR} activeClassName={s.light}>PreJunior</NavLink>\r\n            <NavLink to={PATH.Junior} activeClassName={s.light}>Junior</NavLink>\r\n            <NavLink to={PATH.JuniorPlus} activeClassName={s.light}>Junior+</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport s from \"./Header.module.css\"\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div className={s.body}>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n                <Header/>\r\n\r\n                <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}